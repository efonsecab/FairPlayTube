@using FairPlayTube.ClientServices
@using FairPlayTube.Models.Features
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">
        FairPlayTube<br />
        <small>Beta</small>
    </a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <AuthorizeView>
            <NotAuthorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="/authentication/login" data-bs-toggle="tooltip" data-bs-placement="top">
                        <i class="bi bi-person-circle"></i>
                    </NavLink>
                </li>
            </NotAuthorized>
        </AuthorizeView>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[HomeTextKey]">
                <i class="bi bi-house-door-fill"></i>
            </NavLink>
        </li>
        @if ((FeatureClientService.IsFeatureEnabled(FeatureType.VideoJobSystem)))
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@Common.Global.Constants.PublicVideosPages.VideosJobs" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[VideosJobsTextKey]">
                    <i class="bi bi-person-workspace"></i>
                </NavLink>
            </li>
        }
        <AuthorizeView Roles="@Common.Global.Constants.Roles.Admin">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@Common.Global.Constants.AdminPagesRoutes.Errors" data-bs-toggle="tooltip" data-bs-placement="top" title="Errors">
                    <i class="bi bi-x-circle-fill"></i>
                </NavLink>
            </li>
        </AuthorizeView>
        <AuthorizeView Roles="@Common.Global.Constants.Roles.Creator">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.UploadVideo" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[UploadVideoTextKey]">
                        <i class="bi bi-cloud-upload-fill"></i>
                    </NavLink>
                </li>
                @if ((FeatureClientService.IsFeatureEnabled(FeatureType.VideoJobSystem)))
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.ReceivedApplications" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[ReceivedApplicationsTextKey]">
                            <i class="bi bi-list-task"></i>
                        </NavLink>
                    </li>
                }
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.MyPlaylists" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[MyPlaylistsTextKey]">
                        <i class="bi bi-list-ol"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.MyPendingVideosStatus" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[MyVideosQueueTextKey]">
                        <i class="bi bi-list-check"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.MyVideos" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[MyVideosTextKey]">
                        <i class="bi bi-play-btn-fill"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.InviteUser" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[InviteUserTextKey]">
                        <i class="bi bi-envelope-fill"></i>
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView Roles="@Common.Global.Constants.Roles.User">
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link"
                             href="@Common.Global.Constants.UserPagesRoutes.MyConversations"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             title="@Localizer[MyConversationsTextKey]">
                        <i class="bi bi-chat-text-fill"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.RootPagesRoutes.Persons" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[PersonsInVideosTextKey]">
                        <i class="bi bi-person-circle"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.List" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[UsersTextKey]">
                        <i class="bi bi-people-fill"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.MyFunds" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[MyFundsTextKey]">
                        <i class="bi bi-wallet-fill"></i>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.ProfileMonetization" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[MonetizationProfileTextKey]">
                        <i class="bi bi-cash-stack"></i>
                    </NavLink>
                </li>
            </Authorized>
        </AuthorizeView>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="@Common.Global.Constants.UserPagesRoutes.Keywords" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[SearchTextKey]">
                <i class="bi bi-tags-fill"></i>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="/Visits" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[VisitsTextKey]">
                <i class="bi bi-globe"></i>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="https://github.com/efonsecab/FairPlayTube/" target="_blank" data-bs-toggle="tooltip" data-bs-placement="top" title="GitHub">
                <i class="bi bi-github"></i>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="https://github.com/efonsecab/FairPlayTube/issues?q=is%3Aopen+is%3Aissue+label%3Abug" target="_blank" data-bs-toggle="tooltip" data-bs-placement="top" title="@Localizer[KnownIssuesTextKey]">
                <i class="bi bi-bug-fill"></i>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="https://www.facebook.com/Fairplaytube-106615948308091" target="_blank" data-bs-toggle="tooltip" data-bs-placement="top" title="Facebook">
                <i class="bi bi-facebook"></i>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="https://www.youtube.com/watch?v=iUdjur6sl8g&list=PLGPt1G9l1Tyw0F7vKQYZw1JYhPAMCVQq7" target="_blank" data-bs-toggle="tooltip" data-bs-placement="top" title="Youtube">
                <i class="bi bi-youtube"></i>
            </NavLink>
        </li>
    </ul>
</div>

@code {
    [Inject]
    private IStringLocalizer<NavMenu> Localizer { get; set; }
    [Inject]
    private FeatureClientService FeatureClientService { get; set; }
    private bool collapseNavMenu = true;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private FeatureModel[] AllFeatures { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await FeatureClientService.LoadAllFeaturesAsync();
    }

    #region Resource Keys
    [ResourceKey(defaultValue: "Home")]
    public const string HomeTextKey = "HomeText";
    [ResourceKey(defaultValue: "Upload Video")]
    public const string UploadVideoTextKey = "UploadVideoText";
    [ResourceKey(defaultValue: "My Videos Queue")]
    public const string MyVideosQueueTextKey = "MyVideosQueueText";
    [ResourceKey(defaultValue: "My Videos")]
    public const string MyVideosTextKey = "MyVideosText";
    [ResourceKey(defaultValue: "Invite User")]
    public const string InviteUserTextKey = "InviteUserText";
    [ResourceKey(defaultValue: "Persons In Videos")]
    public const string PersonsInVideosTextKey = "PersonsInVideosText";
    [ResourceKey(defaultValue: "Users")]
    public const string UsersTextKey = "UsersText";
    [ResourceKey(defaultValue: "My Funds")]
    public const string MyFundsTextKey = "MyFundsText";
    [ResourceKey(defaultValue: "Monetization Profile")]
    public const string MonetizationProfileTextKey = "MonetizationProfileText";
    [ResourceKey(defaultValue: "Search")]
    public const string SearchTextKey = "SearchText";
    [ResourceKey(defaultValue: "Visits")]
    public const string VisitsTextKey = "VisitsText";
    [ResourceKey(defaultValue: "Known Issues")]
    public const string KnownIssuesTextKey = "KnownIssuesText";
    [ResourceKey(defaultValue: "My Playlists")]
    public const string MyPlaylistsTextKey = "MyPlaylistsText";
    [ResourceKey(defaultValue: "Videos Jobs")]
    public const string VideosJobsTextKey = "VideosJobsText";
    [ResourceKey("Received Job Applications")]
    public const string ReceivedApplicationsTextKey = "ReceivedApplicationsText";
    [ResourceKey(defaultValue: "My Conversations")]
    public const string MyConversationsTextKey = "MyConversationsText";
    #endregion Resource Keys
}

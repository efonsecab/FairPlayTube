@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        @Localizer[HelloTextKey], @context.User.Identity.Name!
        <button class="btn btn-info rounded-circle" @onclick="BeginLogout">
            <i class="bi bi-person-circle"></i>
            @Localizer[LogoutTextKey]
        </button>
    </Authorized>
    <NotAuthorized>
        <button class="btn btn-info rounded-circle" @onclick="Login">
            <i class="bi bi-person-circle"></i>
            @Localizer[SignInTextKey]/@Localizer[SignUpTextKey]
        </button>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }
    [Inject]
    private IStringLocalizer<LoginDisplay> Localizer { get; set; }
    private async Task BeginLogout(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void Login()
    {
        this.NavigationManager.NavigateTo("authentication/login");
    }

    #region Resource Keys
    [ResourceKey(defaultValue: "Hello")]
    public const string HelloTextKey = "HelloText";
    [ResourceKey(defaultValue:"Sign In")]
    public const string SignInTextKey = "SignInText";
    [ResourceKey(defaultValue: "Sign Up")]
    public const string SignUpTextKey = "SignUpText";
    [ResourceKey(defaultValue: "Logout")]
    public const string LogoutTextKey = "LogoutText";
    #endregion Resource Keys
}
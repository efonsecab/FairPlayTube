@inherits LayoutComponentBase
@inject Common.Configuration.AzureQnABotConfiguration AzureQnABotConfiguration
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            <div class="mx-auto">
                <img class="img-thumbnail" src="images/ptilogo.png" style="height:45px;" />
            </div>
            <a class="btn btn-outline-primary" style="margin:0;" href="https://us11.list-manage.com/contact-form?u=8b82a1556651be6b90abb39cb&form_id=ec99fae0af90bd739e8a29962e37657a" target="_blank">
                Request Demo
            </a>
            <a class="btn btn-outline-primary" style="margin:0;" href="https://twitter.com/ftube2021" target="_blank">
                <i class="bi bi-twitter"></i>
            </a>
            <a class="btn btn-outline-primary" style="margin:0;" href="https://twitter.com/efonsecabcr" target="_blank">
                <i class="bi bi-twitter"></i>
            </a>
            <a class="btn btn-outline-primary" style="margin:0;" href="https://www.linkedin.com/in/pticostarica" target="_blank">
                <i class="bi bi-linkedin"></i>
            </a>
            <a class="btn btn-outline-primary" style="margin:0;" href="https://www.facebook.com/Fairplaytube-106615948308091" target="_blank">
                <i class="bi bi-facebook"></i>
            </a>
            <a class="btn btn-outline-primary" style="margin:0;" href="https://github.com/efonsecab/FairPlayTube/wiki/Users-Manual" target="_blank">
                <i class="bi bi-book-half"></i>
            </a>
            <a class="btn btn-outline-primary blink_me" style="margin:0;" href="https://us11.list-manage.com/survey?u=8b82a1556651be6b90abb39cb&id=ff62326a87&attribution=false" target="_blank">
                <i class="bi bi-list-check"></i>
            </a>
            <SearchVideo OnSearchClicked="OnSearchClicked"></SearchVideo>
            <AuthorizeView>
                <Authorized>
                    <FairPlayTube.Client.CustomComponents.SignalR.NotificationHub></FairPlayTube.Client.CustomComponents.SignalR.NotificationHub>
                </Authorized>
            </AuthorizeView>
            <LoginDisplay></LoginDisplay>
        </div>

        <div class="content px-4" style="height:95%; overflow-y:auto;">
            @Body
        </div>

        @if (ShowFooter)
        {
            <footer id="" class="footer mt-auto py-3 bg-light position-fixed w-100 bottom-0"
                    style="background-color: #f7f7f7 !important; border-bottom: 1px solid #d6d5d5 !important;">
                <div class="container">
                    <button type="button" data-bs-dismiss="modal" aria-label="Close" @onclick="@CloseFooter">
                        <i class="bi bi-x-circle-fill"></i>
                    </button>
                    <div class="mb-3">
                        <p>
                            <strong>Please fill <a href="https://us11.list-manage.com/survey?u=8b82a1556651be6b90abb39cb&id=ff62326a87&attribution=false" target="_blank">this survey</a></strong>
                        </p>
                        <p>
                            <label>
                                <strong>
                                    Note: Some browser extensions block you from playing videos.
                                    If all you see is a blank screen, you will need to disable them
                                </strong>
                            </label>
                        </p>
                    </div>
                    <a class="text-black-50" href="https://cr.linkedin.com/in/pticostarica" target="_blank">Designed by PTI Costa Rica</a>
                </div>
            </footer>
        }

    </div>
</div>

@if (this.ShowSupportBot)
{
    <div class="modal" tabindex="-1" role="dialog" style="display:block;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Knowledge Base</h5>
                    <button type="button" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseSupportBot">
                        <i class="bi bi-x-circle-fill"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row row-cols-2">
                        <FairPlayTube.Components.Bootstrap.Card Width="100%">
                            <CardBody>
                                <iframe src='https://webchat.botframework.com/embed/fptubeprodbot?s=@AzureQnABotConfiguration.Key'
                                        style='min-width: 400px; width: 100%; min-height: 500px;'></iframe>
                            </CardBody>
                        </FairPlayTube.Components.Bootstrap.Card>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="CloseSupportBot">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code{
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    [Inject]
    private NavigationManager NavigationManager { get; set; }
private bool ShowFooter { get; set; } = true;

protected override async Task OnAfterRenderAsync(bool firstRender)
{
    if (!this.NavigationManager.Uri.EndsWith(Common.Global.Constants.UserPagesRoutes.ValidateInviteCode) &&
        this.AuthenticationStateTask != null)
    {
        var state = await AuthenticationStateTask;
        if (state != null && state.User != null && state.User.Identity.IsAuthenticated)
        {
            var userStatus = state.User.Claims.Where(p => p.Type == "UserStatus").Single();
            if (userStatus.Value != "Approved")
                NavigationManager.NavigateTo(Common.Global.Constants.UserPagesRoutes.ValidateInviteCode);
        }
    }
}

private bool ShowSupportBot { get; set; } = false;

private void OpenSupportBot()
{
    this.ShowSupportBot = true;
}

private void CloseSupportBot()
{
    this.ShowSupportBot = false;
}

private void CloseFooter()
{
    this.ShowFooter = false;
}

public void OnSearchClicked(string searchTerm)
{
    this.NavigationManager.NavigateTo($"{Constants.RootPagesRoutes.SearchWithSearchTerm.Replace("{SearchTerm}", searchTerm)}");
}
}
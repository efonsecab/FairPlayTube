@inherits LayoutComponentBase
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            <div class="mx-auto">
                <img class="img-thumbnail" src="images/ptilogo.png" style="height:45px;" />
            </div>
            <AuthorizeView>
                <Authorized>
                    <FairPlayTube.Client.CustomComponents.SignalR.NotificationHub></FairPlayTube.Client.CustomComponents.SignalR.NotificationHub>
                </Authorized>
            </AuthorizeView>
            <LoginDisplay></LoginDisplay>
        </div>

        <div class="content px-4" style="height:95%; overflow-y:auto;">
            @Body
        </div>

        <footer id="" class="footer mt-auto py-3 bg-light position-fixed w-100 bottom-0"
                style="background-color: #f7f7f7 !important; border-bottom: 1px solid #d6d5d5 !important;">
            <div class="container">
                <a class="text-black-50" href="https://cr.linkedin.com/in/pticostarica" target="_blank">Designed by PTI Costa Rica</a>
            </div>
        </footer>

    </div>
</div>

@code{
        [CascadingParameter]
        private Task<AuthenticationState> AuthenticationStateTask { get; set; }
        [Inject]
        private NavigationManager NavigationManager { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!this.NavigationManager.Uri.EndsWith(Common.Global.Constants.UserPagesRoutes.ValidateInviteCode) &&
            this.AuthenticationStateTask != null)
        {
            var state = await AuthenticationStateTask;
            if (state != null && state.User != null && state.User.Identity.IsAuthenticated)
            {
                var userStatus = state.User.Claims.Where(p => p.Type == "UserStatus").Single();
                if (userStatus.Value != "Approved")
                    NavigationManager.NavigateTo(Common.Global.Constants.UserPagesRoutes.ValidateInviteCode);
            }
        }
    }
}